/* tslint:disable */
/* eslint-disable */
/**
 * Your API Title
 * This is a very cool project
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../../runtime';
import type {
  BodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost,
  ChannelLiveUrlsSchema,
  ChannelSchema,
  DeviceSchema,
  FeatureProductSchema,
  GroupProductSchema,
  HTTPValidationError,
  HouseholdProducts,
  HouseholdSchema,
  ProductSchema,
  ProfileSchema,
  ServicesList,
  SetGroupProductServicesRequest,
  UserSchema,
} from '../../models';
import {
    BodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostFromJSON,
    BodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostToJSON,
    ChannelLiveUrlsSchemaFromJSON,
    ChannelLiveUrlsSchemaToJSON,
    ChannelSchemaFromJSON,
    ChannelSchemaToJSON,
    DeviceSchemaFromJSON,
    DeviceSchemaToJSON,
    FeatureProductSchemaFromJSON,
    FeatureProductSchemaToJSON,
    GroupProductSchemaFromJSON,
    GroupProductSchemaToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    HouseholdProductsFromJSON,
    HouseholdProductsToJSON,
    HouseholdSchemaFromJSON,
    HouseholdSchemaToJSON,
    ProductSchemaFromJSON,
    ProductSchemaToJSON,
    ProfileSchemaFromJSON,
    ProfileSchemaToJSON,
    ServicesListFromJSON,
    ServicesListToJSON,
    SetGroupProductServicesRequestFromJSON,
    SetGroupProductServicesRequestToJSON,
    UserSchemaFromJSON,
    UserSchemaToJSON,
} from '../../models';

export interface CreateChannelOpFacadeChnMgmtCreateChannelPostRequest {
    channelSchema: ChannelSchema;
}

export interface CreateDeviceRouterCreateDevicePostRequest {
    deviceSchema: DeviceSchema;
}

export interface CreateFeatureProductOpFacadeProdMgmtCreateFeatureProductPostRequest {
    featureProductSchema: FeatureProductSchema;
}

export interface CreateGroupProductOpFacadeChnMgmtCreateProductPostRequest {
    productSchema: ProductSchema;
}

export interface CreateGroupProductOpFacadeProdMgmtCreateGroupProductPostRequest {
    groupProductSchema: GroupProductSchema;
}

export interface CreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostRequest {
    bodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost: BodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost;
}

export interface CreateProfileRouteOpFacadeHoushMgmtCreateProfilePostRequest {
    householdId: number;
    profileSchema: ProfileSchema;
}

export interface CreateServicesListRouteOpFacadeDomMgmtCreateServicesListPostRequest {
    servicesList: ServicesList;
}

export interface SetChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPostRequest {
    channelLiveUrlsSchema: ChannelLiveUrlsSchema;
}

export interface SetGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPostRequest {
    setGroupProductServicesRequest: SetGroupProductServicesRequest;
}

export interface SetGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPostRequest {
    householdProducts: HouseholdProducts;
}

/**
 *
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Create Channel
     */
    async createChannelOpFacadeChnMgmtCreateChannelPostRaw(requestParameters: CreateChannelOpFacadeChnMgmtCreateChannelPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['channelSchema'] == null) {
            throw new runtime.RequiredError(
                'channelSchema',
                'Required parameter "channelSchema" was null or undefined when calling createChannelOpFacadeChnMgmtCreateChannelPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/chnMgmt/CreateChannel`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ChannelSchemaToJSON(requestParameters['channelSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Channel
     */
    async createChannelOpFacadeChnMgmtCreateChannelPost(requestParameters: CreateChannelOpFacadeChnMgmtCreateChannelPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createChannelOpFacadeChnMgmtCreateChannelPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Device Router
     */
    async createDeviceRouterCreateDevicePostRaw(requestParameters: CreateDeviceRouterCreateDevicePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['deviceSchema'] == null) {
            throw new runtime.RequiredError(
                'deviceSchema',
                'Required parameter "deviceSchema" was null or undefined when calling createDeviceRouterCreateDevicePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/createDevice`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DeviceSchemaToJSON(requestParameters['deviceSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Device Router
     */
    async createDeviceRouterCreateDevicePost(requestParameters: CreateDeviceRouterCreateDevicePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createDeviceRouterCreateDevicePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Feature Product
     */
    async createFeatureProductOpFacadeProdMgmtCreateFeatureProductPostRaw(requestParameters: CreateFeatureProductOpFacadeProdMgmtCreateFeatureProductPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['featureProductSchema'] == null) {
            throw new runtime.RequiredError(
                'featureProductSchema',
                'Required parameter "featureProductSchema" was null or undefined when calling createFeatureProductOpFacadeProdMgmtCreateFeatureProductPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/prodMgmt/CreateFeatureProduct`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: FeatureProductSchemaToJSON(requestParameters['featureProductSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Feature Product
     */
    async createFeatureProductOpFacadeProdMgmtCreateFeatureProductPost(requestParameters: CreateFeatureProductOpFacadeProdMgmtCreateFeatureProductPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createFeatureProductOpFacadeProdMgmtCreateFeatureProductPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Group Product
     */
    async createGroupProductOpFacadeChnMgmtCreateProductPostRaw(requestParameters: CreateGroupProductOpFacadeChnMgmtCreateProductPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['productSchema'] == null) {
            throw new runtime.RequiredError(
                'productSchema',
                'Required parameter "productSchema" was null or undefined when calling createGroupProductOpFacadeChnMgmtCreateProductPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/chnMgmt/CreateProduct`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ProductSchemaToJSON(requestParameters['productSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Group Product
     */
    async createGroupProductOpFacadeChnMgmtCreateProductPost(requestParameters: CreateGroupProductOpFacadeChnMgmtCreateProductPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createGroupProductOpFacadeChnMgmtCreateProductPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Group Product
     */
    async createGroupProductOpFacadeProdMgmtCreateGroupProductPostRaw(requestParameters: CreateGroupProductOpFacadeProdMgmtCreateGroupProductPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['groupProductSchema'] == null) {
            throw new runtime.RequiredError(
                'groupProductSchema',
                'Required parameter "groupProductSchema" was null or undefined when calling createGroupProductOpFacadeProdMgmtCreateGroupProductPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/prodMgmt/CreateGroupProduct`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GroupProductSchemaToJSON(requestParameters['groupProductSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Group Product
     */
    async createGroupProductOpFacadeProdMgmtCreateGroupProductPost(requestParameters: CreateGroupProductOpFacadeProdMgmtCreateGroupProductPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createGroupProductOpFacadeProdMgmtCreateGroupProductPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Household Ext
     */
    async createHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostRaw(requestParameters: CreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['bodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost'] == null) {
            throw new runtime.RequiredError(
                'bodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost',
                'Required parameter "bodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost" was null or undefined when calling createHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/houshMgmt/CreateHouseholdExt`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostToJSON(requestParameters['bodyCreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Household Ext
     */
    async createHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPost(requestParameters: CreateHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createHouseholdExtOpFacadeHoushMgmtCreateHouseholdExtPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Profile Route
     */
    async createProfileRouteOpFacadeHoushMgmtCreateProfilePostRaw(requestParameters: CreateProfileRouteOpFacadeHoushMgmtCreateProfilePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['householdId'] == null) {
            throw new runtime.RequiredError(
                'householdId',
                'Required parameter "householdId" was null or undefined when calling createProfileRouteOpFacadeHoushMgmtCreateProfilePost().'
            );
        }

        if (requestParameters['profileSchema'] == null) {
            throw new runtime.RequiredError(
                'profileSchema',
                'Required parameter "profileSchema" was null or undefined when calling createProfileRouteOpFacadeHoushMgmtCreateProfilePost().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['householdId'] != null) {
            queryParameters['household_id'] = requestParameters['householdId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/houshMgmt/CreateProfile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ProfileSchemaToJSON(requestParameters['profileSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Profile Route
     */
    async createProfileRouteOpFacadeHoushMgmtCreateProfilePost(requestParameters: CreateProfileRouteOpFacadeHoushMgmtCreateProfilePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createProfileRouteOpFacadeHoushMgmtCreateProfilePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Services List Route
     */
    async createServicesListRouteOpFacadeDomMgmtCreateServicesListPostRaw(requestParameters: CreateServicesListRouteOpFacadeDomMgmtCreateServicesListPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['servicesList'] == null) {
            throw new runtime.RequiredError(
                'servicesList',
                'Required parameter "servicesList" was null or undefined when calling createServicesListRouteOpFacadeDomMgmtCreateServicesListPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/domMgmt/CreateServicesList`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ServicesListToJSON(requestParameters['servicesList']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Create Services List Route
     */
    async createServicesListRouteOpFacadeDomMgmtCreateServicesListPost(requestParameters: CreateServicesListRouteOpFacadeDomMgmtCreateServicesListPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createServicesListRouteOpFacadeDomMgmtCreateServicesListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Channels
     */
    async getChannelsOpFacadeChnMgmtChannelsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/op_facade/chnMgmt/Channels`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Get Channels
     */
    async getChannelsOpFacadeChnMgmtChannelsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getChannelsOpFacadeChnMgmtChannelsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Group Product With Channels Route
     */
    async getGroupProductWithChannelsRouteOpFacadeProdMgmtProductsWithChannelsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/op_facade/prodMgmt/ProductsWithChannels`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Get Group Product With Channels Route
     */
    async getGroupProductWithChannelsRouteOpFacadeProdMgmtProductsWithChannelsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getGroupProductWithChannelsRouteOpFacadeProdMgmtProductsWithChannelsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Households Route
     */
    async getHouseholdsRouteOpFacadeHoushMgmtHouseholdsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<HouseholdSchema>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/op_facade/houshMgmt/Households/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(HouseholdSchemaFromJSON));
    }

    /**
     * Get Households Route
     */
    async getHouseholdsRouteOpFacadeHoushMgmtHouseholdsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<HouseholdSchema>> {
        const response = await this.getHouseholdsRouteOpFacadeHoushMgmtHouseholdsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Profiles Route
     */
    async getProfilesRouteOpFacadeHoushMgmtProfilesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProfileSchema>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/op_facade/houshMgmt/Profiles/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProfileSchemaFromJSON));
    }

    /**
     * Get Profiles Route
     */
    async getProfilesRouteOpFacadeHoushMgmtProfilesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProfileSchema>> {
        const response = await this.getProfilesRouteOpFacadeHoushMgmtProfilesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Users Route
     */
    async getUsersRouteOpFacadeHoushMgmtUsersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<UserSchema>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/op_facade/houshMgmt/Users/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(UserSchemaFromJSON));
    }

    /**
     * Get Users Route
     */
    async getUsersRouteOpFacadeHoushMgmtUsersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserSchema>> {
        const response = await this.getUsersRouteOpFacadeHoushMgmtUsersGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Reload Db
     */
    async reloadDbReloadGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/reload/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Reload Db
     */
    async reloadDbReloadGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.reloadDbReloadGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Set Channel Live Urls Route
     */
    async setChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPostRaw(requestParameters: SetChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['channelLiveUrlsSchema'] == null) {
            throw new runtime.RequiredError(
                'channelLiveUrlsSchema',
                'Required parameter "channelLiveUrlsSchema" was null or undefined when calling setChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/chnMgmt/SetChannelLiveUrls`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ChannelLiveUrlsSchemaToJSON(requestParameters['channelLiveUrlsSchema']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Set Channel Live Urls Route
     */
    async setChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPost(requestParameters: SetChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.setChannelLiveUrlsRouteOpFacadeChnMgmtSetChannelLiveUrlsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Set Group Product Services Route
     */
    async setGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPostRaw(requestParameters: SetGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['setGroupProductServicesRequest'] == null) {
            throw new runtime.RequiredError(
                'setGroupProductServicesRequest',
                'Required parameter "setGroupProductServicesRequest" was null or undefined when calling setGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/prodMgmt/SetGroupProductServices`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SetGroupProductServicesRequestToJSON(requestParameters['setGroupProductServicesRequest']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Set Group Product Services Route
     */
    async setGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPost(requestParameters: SetGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.setGroupProductServicesRouteOpFacadeProdMgmtSetGroupProductServicesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Set Group Product Services Route
     */
    async setGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPostRaw(requestParameters: SetGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters['householdProducts'] == null) {
            throw new runtime.RequiredError(
                'householdProducts',
                'Required parameter "householdProducts" was null or undefined when calling setGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/op_facade/prodMgmt/SetHouseholdProds`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HouseholdProductsToJSON(requestParameters['householdProducts']),
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<any>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Set Group Product Services Route
     */
    async setGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPost(requestParameters: SetGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.setGroupProductServicesRouteOpFacadeProdMgmtSetHouseholdProdsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
