/* tslint:disable */
/* eslint-disable */
/**
 * Your API Title
 * This is a very cool project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HouseholdSchema
 */
export interface HouseholdSchema {
    household_id: number;
    /**
     *
     * @type {number}
     * @memberof HouseholdSchema
     */
    domain: number;
    /**
     * 
     * @type {string}
     * @memberof HouseholdSchema
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdSchema
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof HouseholdSchema
     */
    accntCode: string;
    /**
     * 
     * @type {number}
     * @memberof HouseholdSchema
     */
    localeId: number;
    /**
     * 
     * @type {number}
     * @memberof HouseholdSchema
     */
    maxDevices: number;
    /**
     * 
     * @type {number}
     * @memberof HouseholdSchema
     */
    maxUsers: number;
    /**
     * 
     * @type {number}
     * @memberof HouseholdSchema
     */
    maxProfiles: number;
    /**
     * 
     * @type {boolean}
     * @memberof HouseholdSchema
     */
    noPers: boolean;
    /**
     * 
     * @type {{ [key: string]:  | null; }}
     * @memberof HouseholdSchema
     */
    custom?: { [key: string]:  | null; } | null;
}

/**
 * Check if a given object implements the HouseholdSchema interface.
 */
export function instanceOfHouseholdSchema(value: object): value is HouseholdSchema {
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('accntCode' in value) || value['accntCode'] === undefined) return false;
    if (!('localeId' in value) || value['localeId'] === undefined) return false;
    if (!('maxDevices' in value) || value['maxDevices'] === undefined) return false;
    if (!('maxUsers' in value) || value['maxUsers'] === undefined) return false;
    if (!('maxProfiles' in value) || value['maxProfiles'] === undefined) return false;
    if (!('noPers' in value) || value['noPers'] === undefined) return false;
    return true;
}

export function HouseholdSchemaFromJSON(json: any): HouseholdSchema {
    return HouseholdSchemaFromJSONTyped(json, false);
}

export function HouseholdSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): HouseholdSchema {
    if (json == null) {
        return json;
    }
    return {
        'household_id': json['household_id'],
        'domain': json['domain'],
        'description': json['description'],
        'status': json['status'],
        'accntCode': json['accntCode'],
        'localeId': json['localeId'],
        'maxDevices': json['maxDevices'],
        'maxUsers': json['maxUsers'],
        'maxProfiles': json['maxProfiles'],
        'noPers': json['noPers'],
        'custom': json['custom'] == null ? undefined : (mapValues(json['custom'], FromJSON)),
    };
}

export function HouseholdSchemaToJSON(value?: HouseholdSchema | null): any {
    if (value == null) {
        return value;
    }
    return {

        'domain': value['domain'],
        'description': value['description'],
        'status': value['status'],
        'accntCode': value['accntCode'],
        'localeId': value['localeId'],
        'maxDevices': value['maxDevices'],
        'maxUsers': value['maxUsers'],
        'maxProfiles': value['maxProfiles'],
        'noPers': value['noPers'],
        'custom': value['custom'] == null ? undefined : (mapValues(value['custom'], ToJSON)),
    };
}

export function FromJSON(value: any): any {
    return value;
}

export function ToJSON(value: any): any {
    return value;
}
