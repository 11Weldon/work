/* tslint:disable */
/* eslint-disable */
/**
 * Your API Title
 * This is a very cool project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChannelSchema
 */
export interface ChannelSchema {
    channel_id: string;
    /**
     * 
     * @type {number}
     * @memberof ChannelSchema
     */
    serviceId: number;
    /**
     * 
     * @type {string}
     * @memberof ChannelSchema
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelSchema
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelSchema
     */
    status: string;
    /**
     * 
     * @type {number}
     * @memberof ChannelSchema
     */
    format: number;
    /**
     * 
     * @type {number}
     * @memberof ChannelSchema
     */
    mprovId: number;
    /**
     * 
     * @type {number}
     * @memberof ChannelSchema
     */
    cprovId: number;
    /**
     * 
     * @type {number}
     * @memberof ChannelSchema
     */
    langs: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ChannelSchema
     */
    title?: { [key: string]: string; } | null;
    /**
     * 
     * @type {{ [key: string]: Array<{ [key: string]: string; }>; }}
     * @memberof ChannelSchema
     */
    descr?: { [key: string]: Array<{ [key: string]: string; }>; } | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ChannelSchema
     */
    custom?: { [key: string]: string; } | null;
    /**
     * 
     * @type {Array<{ [key: string]: string; }>}
     * @memberof ChannelSchema
     */
    image?: Array<{ [key: string]: string; }> | null;
}

/**
 * Check if a given object implements the ChannelSchema interface.
 */
export function instanceOfChannelSchema(value: object): value is ChannelSchema {
    if (!('serviceId' in value) || value['serviceId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('format' in value) || value['format'] === undefined) return false;
    if (!('mprovId' in value) || value['mprovId'] === undefined) return false;
    if (!('cprovId' in value) || value['cprovId'] === undefined) return false;
    if (!('langs' in value) || value['langs'] === undefined) return false;
    return true;
}

export function ChannelSchemaFromJSON(json: any): ChannelSchema {
    return ChannelSchemaFromJSONTyped(json, false);
}

export function ChannelSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelSchema {
    if (json == null) {
        return json;
    }
    return {
        'channel_id': json['channelId'],
        'serviceId': json['serviceId'],
        'name': json['name'],
        'type': json['type'],
        'status': json['status'],
        'format': json['format'],
        'mprovId': json['mprovId'],
        'cprovId': json['cprovId'],
        'langs': json['langs'],
        'title': json['title'] == null ? undefined : json['title'],
        'descr': json['descr'] == null ? undefined : json['descr'],
        'custom': json['custom'] == null ? undefined : json['custom'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

export function ChannelSchemaToJSON(value?: ChannelSchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'serviceId': value['serviceId'],
        'name': value['name'],
        'type': value['type'],
        'status': value['status'],
        'format': value['format'],
        'mprovId': value['mprovId'],
        'cprovId': value['cprovId'],
        'langs': value['langs'],
        'title': value['title'],
        'descr': value['descr'],
        'custom': value['custom'],
        'image': value['image'],
    };
}

