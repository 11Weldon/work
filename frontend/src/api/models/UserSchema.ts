/* tslint:disable */
/* eslint-disable */
/**
 * Your API Title
 * This is a very cool project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserSchema
 */
export interface UserSchema {
    user_id: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    password: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof UserSchema
     */
    hashInit: string;
}

/**
 * Check if a given object implements the UserSchema interface.
 */
export function instanceOfUserSchema(value: object): value is UserSchema {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('hashInit' in value) || value['hashInit'] === undefined) return false;
    return true;
}

export function UserSchemaFromJSON(json: any): UserSchema {
    return UserSchemaFromJSONTyped(json, false);
}

export function UserSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserSchema {
    if (json == null) {
        return json;
    }
    return {
        'user_id': json['user_id'],
        'username': json['username'],
        'password': json['password'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'status': json['status'],
        'address': json['address'],
        'phone': json['phone'],
        'hashInit': json['hashInit'],
    };
}

export function UserSchemaToJSON(value?: UserSchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'username': value['username'],
        'password': value['password'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'status': value['status'],
        'address': value['address'],
        'phone': value['phone'],
        'hashInit': value['hashInit'],
    };
}

